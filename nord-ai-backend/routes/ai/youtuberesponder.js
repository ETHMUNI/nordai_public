const express = require('express');
const openai = require('../middlewares/openai');

let app = express.Router()

app.post('/youtuberesponder', async (req, res, next) => {
	try {
		let { content } = req.body
  
	let prompt = `Du er en Youtuber som skal svare tilbage p친 en Youtube kommentar som der er blevet lagt p친 din video. Du skal give kreative, positive og/eller professionelle svar til den givende Youtube kommentar.\n###\n` +
	`Seer kommentar: Det er altid sp칝ndende og inspirerende at se hvordan andre laver hakkedrenge og bl칮de l칮g! 游땘 Sk칮n ret! n칝sten starten til en prinseb칮f 游땏
	Svar: Wow tak! Det er som at lave en kulinarisk k칝rlighedsaff칝re med ingedienserne游뱎 Jeg kan ikke vente med at dele flere opskrifter med dig, der vil f친 din mund til at vandes og dit k칮kken til at dufte af succes!\n###\n` +
	`Seer kommentar: Hvad mener du med man at der er et limit p친 hvor mange gram protein man kan optage? Alts친 man kan jo godt optage dem, men de bruges ikke til opbygge muskler med. Er det s친dan det skal forst친es?
	Svar: Hey {navn}\nDet er som at f칮lge en opskrift, hvor protein er ingrediensen til muskelopbygning. Ligesom der er en korrekt m칝ngde sukker og mel i en kageopskrift, s친 er der ogs친 en korrekt m칝ngde protein i en opskrift til muskelopbygning. Der er dog en lille twist, for kroppen har sin egen "proteinoptagelsesgr칝nse", hvor den ikke kan optage og bruge alt protein til muskelopbygning, og resten vil blive omdannet til energi eller gemt som fedt. S친 det er vigtigt at finde den rette balance, ikke at overspise protein, og dermed f칮lge "opskriften" for muskelopbygning.\n###\n` +
	`Seer kommentar: Det er s친 super hyggeligt at se dine videoer! Elsker det游봃
	Svar: Tusind tak for din st칮tte! Det betyder alverdens meget for mig仇벒잺\n###\n`

	let inputRaw = `TEXT: ${ content }` // here is where people enter stuff
	prompt += inputRaw

	const gptResponse = await openai.complete({
		engine: 'text-davinci-003',
		prompt,
		maxTokens: 2500,
		temperature: 0.9,
		topP: 1,
		frequencyPenalty: 1,
		presencePenalty: 0,
		bestOf: 1,
		n: 1,
		user: req.user._id,
		stream: false,
		stop: ["###", "<|endoftext|>", ],
	});

	let output = `${gptResponse.data.choices[0].text}`

	// remove the first character from output
	output = output.substring(1, output.length)

	// If the output string ends with one or more hashtags, remove all of them
	if (output.endsWith('"')) {
		output = output.substring(0, output.length - 1)
	}

	// If the output string ends with one or more hashtags, remove all of them
	if (output.endsWith('"')) {
		output = output.substring(0, output.length - 1)
	}

	// remove a single new line at the end of output if there is one
	if (output.endsWith('\n')) {
		output = output.substring(0, output.length - 1)
	}

	req.locals.input = prompt
	req.locals.inputRaw = inputRaw
	req.locals.output = output

	next()

	} catch (err){
		console.log(err.response)
		console.log(err.data)
		console.log(err.message)
	}
	
  })

module.exports = app